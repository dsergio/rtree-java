# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'RTreeData/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'RTreeWeb-dotNet/RTreeWeb-dotNet'
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'RTreeWeb-dotNet/RTreeWeb-dotNet'
    customCommand: 'run build:prod'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/test/**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: |
      **/RTreeWeb-dotNet/RTreeWeb-dotNet.csproj
    arguments: '--configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)"'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'