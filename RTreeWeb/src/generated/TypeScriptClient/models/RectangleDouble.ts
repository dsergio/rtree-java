/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RectangleDouble
 */
export interface RectangleDouble {
    /**
     * 
     * @type {Array<number>}
     * @memberof RectangleDouble
     */
    dimensionArray1?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof RectangleDouble
     */
    dimensionArray2?: Array<number>;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof RectangleDouble
     */
    json?: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof RectangleDouble
     */
    numberDimensions?: number;
}

/**
 * Check if a given object implements the RectangleDouble interface.
 */
export function instanceOfRectangleDouble(value: object): value is RectangleDouble {
    return true;
}

export function RectangleDoubleFromJSON(json: any): RectangleDouble {
    return RectangleDoubleFromJSONTyped(json, false);
}

export function RectangleDoubleFromJSONTyped(json: any, ignoreDiscriminator: boolean): RectangleDouble {
    if (json == null) {
        return json;
    }
    return {
        
        'dimensionArray1': json['dimensionArray1'] == null ? undefined : json['dimensionArray1'],
        'dimensionArray2': json['dimensionArray2'] == null ? undefined : json['dimensionArray2'],
        'json': json['json'] == null ? undefined : json['json'],
        'numberDimensions': json['numberDimensions'] == null ? undefined : json['numberDimensions'],
    };
}

export function RectangleDoubleToJSON(json: any): RectangleDouble {
    return RectangleDoubleToJSONTyped(json, false);
}

export function RectangleDoubleToJSONTyped(value?: RectangleDouble | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dimensionArray1': value['dimensionArray1'],
        'dimensionArray2': value['dimensionArray2'],
        'json': value['json'],
        'numberDimensions': value['numberDimensions'],
    };
}

